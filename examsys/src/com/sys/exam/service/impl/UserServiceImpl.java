package com.sys.exam.service.impl;


import java.util.ArrayList;
import java.util.List;

import com.sys.exam.database.Pager;
import com.sys.exam.database.bean.User;
import com.sys.exam.database.model.UserModel;
import com.sys.exam.service.ManagerService;
import com.sys.exam.service.UserService;
import com.sys.exam.util.EncryptUtil;


/**
 * User generated by MyEclipse Persistence Tools
 */

public class UserServiceImpl implements UserService 
{

    private ManagerService managerService;

    /**
     * @return Returns the managerService.
     */
    public ManagerService getManagerService()
    {
        return managerService;
    }

    /**
     * @param managerService The managerService to set.
     */
    public void setManagerService(ManagerService managerService)
    {
        this.managerService = managerService;
    }

	@Override
	public User verifyUser(User loginuser) throws Exception {
		StringBuilder hsql=new StringBuilder();
		hsql.append("from User user where user.userAccount='");
		hsql.append(loginuser.getUserAccount());
		hsql.append("' or user.userName='");
		hsql.append(loginuser.getUserAccount());
		hsql.append("'");
		List<User> userList=managerService.getUserDao().find(hsql.toString());
		User user_db=null;//从数据库中查找到的user
		if(userList.size()>0){
			user_db=userList.get(0);
		}
        if(user_db!=null){
        	//将用户提交的密码进行md5加密
        	String password=EncryptUtil.md5Encrypt(loginuser.getUserPassword());
        	String password_db=user_db.getUserPassword();
        	if(password_db.equals(password)){//验证用户输入的密码是否正确
        		return user_db;
        	}
            return null;
        }else
        {
            return null;
        }
	}

	@Override
	public Pager findUserListByRole(int userRole, Pager pager) throws Exception {
		
	    String sql="from User u where u.userRole="+userRole;
	    List<User> listusers=managerService.getUserDao().find(sql);
	    List<UserModel> listUms=new ArrayList<UserModel>();
	    UserModel um=null;
	    for (User user : listusers)
        {
            um=new UserModel();
            um.setUserAccount(user.getUserAccount());
            um.setUserId(user.getUserId());
            um.setUserName(user.getUserName());
            listUms.add(um);
        }
	    
	    //分页
	    int pageBegin = (pager.getCurrentPage() - 1) * pager.getPageSize();
        int pageEnd = pageBegin + pager.getPageSize();
        int total = listUms.size();
        if (pageEnd > total)
            pageEnd = total;
        Pager p = new Pager(total, pager.getPageSize());
        p.setElements(listUms.subList(pageBegin, pageEnd));
	    
		return p;
	}

	@Override
	public String deleteUsers(List<Long> userIdList) throws Exception {
	    for (Long long1 : userIdList)
        {
	        managerService.getUserDao().deleteByKey(long1);
        }
		
		return null;
	}

	@Override
	public String addImportUsers(String filePath) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}  

}